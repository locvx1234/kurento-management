/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2015 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the GNU Lesser General Public License (LGPL)
 * version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */


/**
 * Indicates that the state of the connection has changed
 *
 * @event module:core#ConnectionStateChanged
 *
 * @type {module:core#event:Media}
 *
 * @property {module:core/complexTypes.ConnectionState} oldState
 *  The previous state
 * @property {module:core/complexTypes.ConnectionState} newState
 *  The new state
 */

/**
 * Indicates that an element has been connected to other
 *
 * @event module:core#ElementConnected
 *
 * @type {module:core#event:Media}
 *
 * @property {module:core/abstracts.MediaElement} sink
 *  sink element in new connection
 * @property {module:core/complexTypes.MediaType} mediaType
 *  Media type of the connection
 * @property {external:String} sourceMediaDescription
 *  Description of the source media
 * @property {external:String} sinkMediaDescription
 *  Description of the sink media
 */

/**
 * Indicates that an element has been disconnected
 *
 * @event module:core#ElementDisconnected
 *
 * @type {module:core#event:Media}
 *
 * @property {module:core/abstracts.MediaElement} sink
 *  sink element in previous connection
 * @property {module:core/complexTypes.MediaType} mediaType
 *  Media type of the previous connection
 * @property {external:String} sourceMediaDescription
 *  Description of the source media
 * @property {external:String} sinkMediaDescription
 *  Description of the sink media
 */

/**
 * An error related to the MediaObject has occurred
 *
 * @event module:core#Error
 *
 * @type {module:core#event:RaiseBase}
 *
 * @property {external:String} description
 *  Textual description of the error
 * @property {external:Integer} errorCode
 *  Server side integer error code
 * @property {external:String} type
 *  Integer code as a String
 */

/**
 * Base for all events raised by elements in the Kurento media server.
 *
 * @event module:core#Media
 *
 * @type {module:core#event:RaiseBase}
 *
 * @property {external:String} type
 *  Type of event that was raised
 */

/**
 * Event raised when a session starts. This event has no data.
 *
 * @event module:core#MediaSessionStarted
 */

/**
 * Event raised when a session is terminated. This event has no data.
 *
 * @event module:core#MediaSessionTerminated
 */

/**
 * Indicates that the state of the media has changed
 *
 * @event module:core#MediaStateChanged
 *
 * @type {module:core#event:Media}
 *
 * @property {module:core/complexTypes.MediaState} oldState
 *  The previous state
 * @property {module:core/complexTypes.MediaState} newState
 *  The new state
 */

/**
 * Indicates that an object has been created on the mediaserver
 *
 * @event module:core#ObjectCreated
 *
 * @type {module:core#event:RaiseBase}
 *
 * @property {module:core/abstracts.MediaObject} object
 *  The object that has been created
 */

/**
 * Indicates that an object has been destroyed on the mediaserver
 *
 * @event module:core#ObjectDestroyed
 *
 * @type {module:core#event:RaiseBase}
 *
 * @property {external:String} objectId
 *  The id of the object that has been destroyed
 */

/**
 *
 * @event module:core#RaiseBase
 *
 * @property {module:core/abstracts.MediaObject} source
 *  Object that raised the event
 * @property {external:String} timestamp
 * @property {module:core/complexTypes.Tag} tags
 */
